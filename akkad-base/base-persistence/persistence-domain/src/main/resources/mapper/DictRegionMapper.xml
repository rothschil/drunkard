<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="xyz.wongs.drunkard.domain.addbook.mapper.DictRegionMapper" >
  <resultMap id="BaseResultMap" type="xyz.wongs.drunkard.domain.addbook.entity.DictRegion" >
    <id column="DICT_REGION_ID" property="id" jdbcType="BIGINT" />
    <result column="STATUS" property="status" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="xyz.wongs.drunkard.domain.addbook.entity.DictRegion" extends="BaseResultMap" >
    <result column="REGION_NAME" property="regionName" jdbcType="VARBINARY" />
    <result column="REGION_CODE" property="regionCode" jdbcType="VARBINARY" />
    <result column="UP_REGION_CODE" property="upRegionCode" jdbcType="VARBINARY" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    DICT_REGION_ID, STATUS
  </sql>
  <sql id="Blob_Column_List" >
    REGION_NAME, REGION_CODE, UP_REGION_CODE
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="xyz.wongs.drunkard.domain.addbook.entity.DictRegionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from dict_region
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="xyz.wongs.drunkard.domain.addbook.entity.DictRegionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from dict_region
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from dict_region
    where DICT_REGION_ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from dict_region
    where DICT_REGION_ID = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="xyz.wongs.drunkard.domain.addbook.entity.DictRegion" >
    insert into dict_region (DICT_REGION_ID, STATUS, REGION_NAME, 
      REGION_CODE, UP_REGION_CODE)
    values (#{id,jdbcType=BIGINT}, #{status,jdbcType=INTEGER}, #{regionName,jdbcType=VARBINARY}, 
      #{regionCode,jdbcType=VARBINARY}, #{upRegionCode,jdbcType=VARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="xyz.wongs.drunkard.domain.addbook.entity.DictRegion" >
    insert into dict_region
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="dictRegionId != null" >
        DICT_REGION_ID,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="regionName != null" >
        REGION_NAME,
      </if>
      <if test="regionCode != null" >
        REGION_CODE,
      </if>
      <if test="upRegionCode != null" >
        UP_REGION_CODE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="dictRegionId != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="regionName != null" >
        #{regionName,jdbcType=VARBINARY},
      </if>
      <if test="regionCode != null" >
        #{regionCode,jdbcType=VARBINARY},
      </if>
      <if test="upRegionCode != null" >
        #{upRegionCode,jdbcType=VARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="xyz.wongs.drunkard.domain.addbook.entity.DictRegion" >
    update dict_region
    <set >
      <if test="status != null" >
        STATUS = #{status,jdbcType=INTEGER},
      </if>
      <if test="regionName != null" >
        REGION_NAME = #{regionName,jdbcType=VARBINARY},
      </if>
      <if test="regionCode != null" >
        REGION_CODE = #{regionCode,jdbcType=VARBINARY},
      </if>
      <if test="upRegionCode != null" >
        UP_REGION_CODE = #{upRegionCode,jdbcType=VARBINARY},
      </if>
    </set>
    where DICT_REGION_ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="xyz.wongs.drunkard.domain.addbook.entity.DictRegion" >
    update dict_region
    set STATUS = #{status,jdbcType=INTEGER},
      REGION_NAME = #{regionName,jdbcType=VARBINARY},
      REGION_CODE = #{regionCode,jdbcType=VARBINARY},
      UP_REGION_CODE = #{upRegionCode,jdbcType=VARBINARY}
    where DICT_REGION_ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="xyz.wongs.drunkard.domain.addbook.entity.DictRegion" >
    update dict_region
    set STATUS = #{status,jdbcType=INTEGER}
    where DICT_REGION_ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>