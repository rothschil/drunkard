server:
  port: 9090
# mysql数据源配置

spring:
  application:
    name: war3-sky
  jpa:
    hibernate:
      ddl-auto: none
    #        use_sql_comments: true
    open-in-view: false
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        enable_lazy_load_no_trans: true
  transaction:
    rollback-on-commit-failure: true
  mvc:
    servlet:
      load-on-startup: 1
  aop:
    auto: true
    proxy-target-class: true
  jackson:
    default-property-inclusion: non_null
    time-zone: GMT+8
    date-format: yyyy-MM-dd HH:mm:ss
    serialization:
      indent_output: true
      write_null_map_values: true
      write_dates_as_timestamps: false
    deserialization:
      fail_on_unknown_properties: false
    parser:
      allow_unquoted_control_chars: true
      allow_single_quotes: true
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://192.168.244.128:3306/area20?characterEncoding=utf8&useSSL=false
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
    druid:
      initial-size: 50
      min-idle: 50
      max-active: 100
      max-wait: 30000
      query-timeout: 10
      ##配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 2000
      ## 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      max-evictable-idle-time-millis: 600000
      remove-abandoned: false
      remove-abandoned-timeout: 180
      log-abandoned: false
      validation-query: select 1
      test-while-idle: true
      test-on-borrow: true
      test-on-return: true
      keep-alive: true
      phy-timeout-millis: 500
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=6000
      useGlobalDataSourceStat: true
      filter:
        config:
          ##启用ConfigFilter
          enabled: true
        stat:
          enabled: true
          log-slow-sql: true
          slow-sql-millis: 10000
          merge-sql: true
        slf4j:
          enabled: true
          connection-log-enabled: true
          connection-close-after-log-enabled: true
          connection-commit-after-log-enabled: true
          connection-connect-after-log-enabled: true
          connection-connect-before-log-enabled: true
          connection-log-error-enabled: true
          data-source-log-enabled: true
          result-set-log-enabled: true
          statement-log-enabled: true
        wall:
          enabled: true
          config:
            alter-table-allow: false
            truncate-allow: false
            drop-table-allow: false
            #是否允许非以上基本语句的其他语句，缺省关闭，通过这个选项就能够屏蔽DDL
            none-base-statement-allow: false
            #检查UPDATE语句是否无where条件，这是有风险的，但不是SQL注入类型的风险
            update-where-none-check: true
            #SELECT ... INTO OUTFILE 是否允许，这个是mysql注入攻击的常见手段，缺省是禁止的
            select-into-outfile-allow: false
            #是否允许调用Connection.getMetadata方法，这个方法调用会暴露数据库的表信息
            metadata-allow: true
            #允许多条sql一起执行
            multiStatementAllow: true
            delete-allow: true
          #对被认为是攻击的SQL进行LOG.error输出
          log-violation: true
          #对被认为是攻击的SQL抛出SQLExcepton
          throw-exception: true
          ##有时，应用框架做了自己的JDBC Proxy Driver，是的DruidDataSource无法正确识别数据库的类型，则需要特别指定
          db-type: mysql
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'
        session-stat-enable: false
        session-stat-max-count: 100000
      stat-view-servlet:
        enabled: true
        login-password: 123456
        login-username: admin
        url-pattern: /druid/*
        reset-enable: true

# ===== 自定义swagger配置 ===== #
swagger:
  enable: true
  application-name: ${spring.application.name}
  application-version: 1.0
  application-description: springfox swagger 3.0整合Demo
  try-host: http://localhost:${server.port}